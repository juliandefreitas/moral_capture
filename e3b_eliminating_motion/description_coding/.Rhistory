t.test(blame[cond==0 | cond==1] ~ cond[cond==0 | cond==1], var.equal=TRUE, paired=FALSE)
tes(-3.8519,91,116) #0.54
#no context vs. -100ms
t.test(blame[cond==0 | cond==2] ~ cond[cond==0 | cond==2], var.equal=TRUE, paired=FALSE)
tes(-3.9614,91,106) #0.57
#no context vs. -300ms
t.test(blame[cond==0 | cond==3] ~ cond[cond==0 | cond==3], var.equal=TRUE, paired=FALSE)
tes(-1.9104,91,94) #0.28
#no context vs. -500ms
t.test(blame[cond==0 | cond==4] ~ cond[cond==0 | cond==4], var.equal=TRUE, paired=FALSE)
tes(-1.6182,91,88) #0.24
#no context vs. -700ms
t.test(blame[cond==0 | cond==5] ~ cond[cond==0 | cond==5], var.equal=TRUE, paired=FALSE)
tes(-2.2325,91,90) #0.33
blameChoiceTable <- table(blame_choice,cond); blameChoiceTable
blameTable
# 0ms v -100ms
length(cond[cond == 1 | cond == 2])
chisq.test(cond[cond == 1 | cond == 2], blame_choice[cond== 1 | cond == 2])
chisq.test(blameChoiceTable[,2:3])
cramersV(blameChoiceTable[,2:3])
# 0ms v -300ms
length(cond[cond == 1 | cond == 3])
chisq.test(cond[cond == 1 | cond == 3], blame_choice[cond== 1 | cond == 3])
chisq.test(blameChoiceTable[,c(2,4)])
cramersV(blameChoiceTable[,c(2,4)])
# 0ms v -500ms
length(cond[cond == 1 | cond == 4])
chisq.test(cond[cond == 1 | cond == 4], blame_choice[cond== 1 | cond == 4])
chisq.test(blameChoiceTable[,c(2,5)])
cramersV(blameChoiceTable[,c(2,5)])
# 0ms v -700ms
length(cond[cond == 1 | cond == 5])
chisq.test(cond[cond == 1 | cond == 5], blame_choice[cond== 1 | cond == 5])
chisq.test(blameChoiceTable[,c(2,6)])
cramersV(blameChoiceTable[,c(2,6)])
# no context v 0ms
length(cond[cond == 0 | cond == 1])
chisq.test(cond[cond == 0 | cond == 1], blame_choice[cond== 0 | cond == 1])
chisq.test(blameChoiceTable[,1:2])
cramersV(blameChoiceTable[,1:2])
# no context v -100ms
length(cond[cond == 0 | cond == 2])
chisq.test(cond[cond == 0 | cond == 2], blame_choice[cond == 0 | cond == 2])
chisq.test(blameChoiceTable[,c(1,3)])
cramersV(blameChoiceTable[,c(1,3)])
# no context v -300ms
length(cond[cond == 0 | cond == 3])
chisq.test(cond[cond == 0 | cond == 3], blame_choice[cond == 0 | cond == 3])
chisq.test(blameChoiceTable[,c(1,4)])
cramersV(blameChoiceTable[,c(1,4)])
# no context v -500ms
length(cond[cond == 0 | cond == 4])
chisq.test(cond[cond == 0 | cond == 4], blame_choice[cond == 0 | cond == 4])
chisq.test(blameChoiceTable[,c(1,5)])
cramersV(blameChoiceTable[,c(1,5)])
# no context v -700ms
length(cond[cond == 0 | cond == 5])
chisq.test(cond[cond == 0 | cond == 5], blame_choice[cond == 0 | cond == 5])
chisq.test(blameChoiceTable[,c(1,6)])
cramersV(blameChoiceTable[,c(1,6)])
## end =========================================================================================================================================================
## clear workspace
rm(list = ls())
## necessary libraries
if (!require(rjson)) {install.packages("rjson"); require(rjson)}
if (!require(ggplot2)) {install.packages("ggplot2"); require(ggplot2)}
if (!require(ltm)) {install.packages("ltm"); require(ltm)}
if (!require(heplots)) {install.packages("heplots")3; require(heplots)}
if (!require(lmtest)) {install.packages("lmtest"); require(lmtest)}
if (!require(compute.es)) {install.packages("compute.es"); require(compute.es)}
if (!require(lsr)) {install.packages("lsr"); require(lsr)}
if (!require(lsmeans)) {install.packages("lsmeans"); require(lsmeans)}
##================ import data ================================================================================================
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github_anonymized/moral_capture/e3a_grouping/data_and_analysis/data")
files <- list.files(pattern=('*txt'))
myJSON <- lapply(files, function(x) fromJSON(file=x)) #join into one single JSON file
(data <- lapply(myJSON, function(myJSON) { as.data.frame(myJSON) }))
data <- (data <- do.call(rbind, data))
# num ss recruited
dim(data) #837
#data after comprehension exclusions
data <- subset(data,(data$trialStruct.comprehension == "E"))
dim(data)
data <-subset(data,(data$trialStruct.displayTime < 4225 & data$trialStruct.displayTime > 4175))
dim(data) #722
837-722 #115 excluded
# demographics
sex <- as.factor(data$trialStruct.sex)
table(sex)[2]/sum(table(sex))
age <- as.numeric(levels(data$trialStruct.age))[data$trialStruct.age]
mean(age, na.rm = TRUE)
# exclusions
data <- subset(data,(data$trialStruct.whichCar_choice == 2))
dim(data) #521
100- (((722-521)/722)*100)
#motion type
for(i in 1:dim(data)[1]) {
if(data$trialStruct.cond[i]==1 || data$trialStruct.cond[i]==2 || data$trialStruct.cond[i]==3) {
data$motionType[i] = 1
data$motionType_name[i] = "motion"
}
else if(data$trialStruct.cond[i]==4) {
data$motionType[i] = 2
data$motionType_name[i] = "static"
}
else if(data$trialStruct.cond[i]==5) {
data$motionType[i] = 3
data$motionType_name[i] = "opposite"
}
else if(data$trialStruct.cond[i]==0) {
data$motionType[i] = 0
data$motionType_name[i] = "none"
}
}
#numlogs
for(i in 1:dim(data)[1]) {
if(data$trialStruct.cond[i]==1 || data$trialStruct.cond[i]==4 || data$trialStruct.cond[i]==5 ) {
data$numLogs[i] = 1
data$numLogs_name[i] = "many"
}
else if(data$trialStruct.cond[i]==2) {
data$numLogs[i] = 2
data$numLogs_name[i] = "some"
}
else if(data$trialStruct.cond[i]==3) {
data$numLogs[i] = 3
data$numLogs_name[i] = "few"
}
else if(data$trialStruct.cond[i]==0) {
data$numLogs[i] = 0
data$numLogs_name[i] = "none"
}
}
condNames <- c('Many logs','Some Logs','Few Logs','Static','Opposite Motion')
## assign variable names
cond <- as.factor(data$trialStruct.cond)
numLogs <- as.factor(data$numLogs_name)
motionType <- as.numeric(data$motionType)
blame <- as.numeric(levels(data$trialStruct.blame_scaled))[data$trialStruct.blame_scaled]
blame_choice <- as.factor(data$trialStruct.blame_choice)
# baseline
baseline_mean <- mean(blame[cond == 0]); baseline_mean
baseline_sd <- sd(blame[cond==0]); baseline_sd
baseline_length <- length(blame[cond == 0]); baseline_length
baseline_sem <- baseline_sd/sqrt(baseline_length); baseline_sem
baseline_add_sem <- baseline_mean + baseline_sem
baseline_minus_sem <- baseline_mean - baseline_sem
alpha = .05;
numConds = 5;
blame_mat <- matrix(NA,numConds,5)
colnames(blame_mat) <- c('cond','mean','sd','n','sem')
for (i in 1:numConds) {
blame_mat[i,] <- c(i,mean(blame[cond == i]),sd(blame[cond==i]), length(blame[cond == i]),0)
blame_mat[i,5] <- blame_mat[i,3]/sqrt(blame_mat[i,4])
}
blame.summary <- as.data.frame(blame_mat, stringsAsFactors=F)
condNames <- c('Many logs','Some Logs','Few Logs','Static','Opposite Motion')
group.colors <- c("1" = "#808080", "2" = "#808080","3" = "#4682B4", "4" = "#4682B4", "5" = "#0680f9","6" = "#0680f9","7" = "#67C8FF")
#quartz(width=7)
## bar plot - blame scaled
title <- c('Blame Judgments')
p1<-ggplot(blame.summary,aes(x=factor(cond),y=mean,fill=factor(cond))) +
scale_fill_manual(values=group.colors) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")+theme_bw()+coord_cartesian(ylim=c(1, 8))
p1+geom_errorbar(aes(ymax=mean+sem, ymin=mean-sem), position="dodge")+ggtitle(title)+
scale_x_discrete(breaks = 1:length(condNames), labels=condNames)+
theme(panel.grid.major = element_blank(),legend.position="none", panel.grid.minor = element_blank(), axis.title.y=element_blank())+
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust=1))+
xlab("Condition")+ylab("Mean") + geom_hline(yintercept = baseline_add_sem) +
geom_hline(yintercept = baseline_minus_sem) + geom_hline(yintercept = baseline_mean, lty=5)
## bar plot - blame mcq
blameTable <- matrix(NA,6)
blameTable[1] <- length(blame_choice[cond==1 & blame_choice==1])/length(blame_choice[cond==1])
blameTable[2] <- length(blame_choice[cond==2 & blame_choice==1])/length(blame_choice[cond==2])
blameTable[3] <- length(blame_choice[cond==3 & blame_choice==1])/length(blame_choice[cond==3])
blameTable[4] <- length(blame_choice[cond==4 & blame_choice==1])/length(blame_choice[cond==4])
blameTable[5] <- length(blame_choice[cond==5 & blame_choice==1])/length(blame_choice[cond==5])
blameTable[6] <- length(blame_choice[cond==0 & blame_choice==1])/length(blame_choice[cond==0])
barplot(blameTable[1:5], beside=TRUE,ylim=c(0,1.0), col=group.colors,
legend.text=TRUE, main="Proportion Blaming Driver of Red Car", cex.axis=1.0, cex.main = 1.5,names = condNames,ylab="Proportion")
abline(a= blameTable[6], b = 0)
motionType <- as.factor(data$motionType)
model1 <- lm(blame ~ motionType) #simple model
summary(model1)
#simple comparisons: model 1
means <- lsmeans(model1, specs = ~ motionType); means
tests <- contrast(means, method="pairwise"); tests
confint(tests)
model2 <- lm(blame ~ motionType + motionType/numLogs)
summary(model2)
means <- lsmeans(model2, specs = ~ motionType + motionType/numLogs)
tests <- contrast(means, method="pairwise"); tests
lrtest(model1,model2) #model 1 is a better fit
-#cohen's d
tes(-7.073, 521, 521) #same v. none;  #0.44
tes(2.961, 521, 521) #same v. opposite; #0.18
tes(4.053, 521, 521) #same v. static; #0.25
tes(-1.050, 521, 521) #none v. static; #0.07
tes(-2.338, 521, 521) #none v. opposite; #0.14
glm_1 <- glm(blame_choice ~ motionType, family = binomial)
summary(glm_1)
#simple comparisons
means <- lsmeans(glm_1, specs = ~ motionType); means
tests <- contrast(means, method="pairwise"); tests
glm_2 <- glm(blame_choice ~ motionType/numLogs, family = binomial)
summary(glm_2)
lrtest(glm_1,glm_2) #model 1 is a better fit
#simple comparisons: model 2
#simple comparisons: model 2
#means <- lsmeans(glm_2, specs = ~ motionType/numLogs); means
#simple comparisons: model 2
#means <- lsmeans(glm_2, specs = ~ motionType/numLogs); means
#tests <- contrast(means, method="pairwise"); tests
#quartz(width=7)
## bar plot - blame scaled
title <- c('Blame Judgments')
p1<-ggplot(blame.summary,aes(x=factor(cond),y=mean,fill=factor(cond))) +
scale_fill_manual(values=group.colors) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")+theme_bw()+coord_cartesian(ylim=c(1, 8))
p1+geom_errorbar(aes(ymax=mean+sem, ymin=mean-sem), position="dodge")+ggtitle(title)+
scale_x_discrete(breaks = 1:length(condNames), labels=condNames)+
theme(panel.grid.major = element_blank(),legend.position="none", panel.grid.minor = element_blank(), axis.title.y=element_blank())+
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust=1))+
xlab("Condition")+ylab("Mean") + geom_hline(yintercept = baseline_add_sem) +
geom_hline(yintercept = baseline_minus_sem) + geom_hline(yintercept = baseline_mean, lty=5)
## clear workspace
rm(list = ls())
## necessary libraries
if (!require(rjson)) {install.packages("rjson"); require(rjson)}
if (!require(ggplot2)) {install.packages("ggplot2"); require(ggplot2)}
if (!require(ltm)) {install.packages("ltm"); require(ltm)}
if (!require(heplots)) {install.packages("heplots"); require(heplots)}
if (!require(lmtest)) {install.packages("lmtest"); require(lmtest)}
if (!require(compute.es)) {install.packages("compute.es"); require(compute.es)}
if (!require(lsr)) {install.packages("lsr"); require(lsr)}
if (!require(lsmeans)) {install.packages("lsmean"); require(lsmeans)}
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github_anonymized/moral_capture/e3a_grouping/data_and_analysis/data")
files <- list.files(pattern=('*txt'))
myJSON <- lapply(files, function(x) fromJSON(file=x)) #join into one single JSON file
(data <- lapply(myJSON, function(myJSON) { as.data.frame(myJSON) }))
data_motion_baseline <- (data_motion_baseline <- do.call(rbind, data))
data_motion_baseline <- data_motion_baseline[data_motion_baseline$trialStruct.cond==0,]
data_motion_baseline$trialStruct.cond <- 2
#exclusions
data_motion_baseline <- subset(data_motion_baseline,(data_motion_baseline$trialStruct.comprehension == "E"))
data_motion_baseline <- subset(data_motion_baseline,(data_motion_baseline$trialStruct.displayTime < 4225 & data_motion_baseline$trialStruct.displayTime > 4175))
data_motion_baseline <- subset(data_motion_baseline,(data_motion_baseline$trialStruct.whichCar_choice == 2))
dim(data_motion_baseline) #89 (same as in E3a, obviously)
#add extra column, so that we can later rbind these data with that for e3b
data_motion_baseline$carHitMan <- 0
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github_anonymized/moral_capture/e3b_eliminating_motion/data_and_analysis/data")
files <- list.files(pattern=('*txt'))
myJSON <- lapply(files, function(x) fromJSON(file=x)) #join into one single JSON file
(data <- lapply(myJSON, function(myJSON) { as.data.frame(myJSON) }))
data <- (data <- do.call(rbind, data))
# num ss recruited
dim(data) #283
# data after comprehension exclusion
data <- subset(data,(data$trialStruct.comprehension == "E"))
dim(data) #280
#demographics
sex <- as.factor(data$trialStruct.sex)
table(sex)[2]/sum(table(sex))
age <- as.numeric(levels(data$trialStruct.age))[data$trialStruct.age]
mean(age,na.rm=TRUE)
# data after which car exclusion
data <- subset(data,(data$trialStruct.whichCar_choice == 2))
dim(data) #264
# proportion excluded by which car measure
100 - (((280-264)/280)*100)
#add 'car hit man' codes from separate description coding
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github/moral_capture/e3b_eliminating_motion/description_coding")
descriptions <- read.csv('e3b_coded_descriptions.csv')
#add 'car hit man' codes from separate description coding
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github_anonymized/moral_capture/e3b_eliminating_motion/description_coding")
descriptions <- read.csv('e3b_coded_descriptions.csv')
data$carHitMan <- descriptions$julian_carHitMan_codes
data <- rbind(data,data_motion_baseline); dim(data)
numConds = 1
## assign variable names
cond <- as.factor(data$trialStruct.cond)
table(cond)
blame <- as.numeric(levels(data$trialStruct.blame_scaled))[data$trialStruct.blame_scaled]
blame_choice <- as.factor(data$trialStruct.blame_choice)
descrip <- data$trialStruct.descrip
#subset of participants who didn't mention a car hitting a man
noHitData <- subset(data, data$carHitMan == 0)
noHit_cond <- as.factor(noHitData$trialStruct.cond)
noHit_blame <- as.numeric(levels(noHitData$trialStruct.blame_scaled))[noHitData$trialStruct.blame_scaled]
noHit_blame_choice <- as.factor(noHitData$trialStruct.blame_choice)
#baseline
baseline_mean <- mean(blame[cond == 0]); baseline_mean
baseline_sd <- sd(blame[cond==0]); baseline_sd
baseline_length <- length(blame[cond == 0]); baseline_length
baseline_sem <- baseline_sd/sqrt(baseline_length); baseline_sem
baseline_add_sem <- baseline_mean + baseline_sem
baseline_minus_sem <- baseline_mean - baseline_sem
alpha = .05;
blame_mat <- matrix(NA,numConds,5)
colnames(blame_mat) <- c('cond','mean','sd','n','sem')
for (i in 1:numConds) {
blame_mat[i,] <- c(i,mean(blame[cond == i]),sd(blame[cond==i]), length(blame[cond == i]),0)
blame_mat[i,5] <- blame_mat[i,3]/sqrt(blame_mat[i,4])
}
blame.summary <- as.data.frame(blame_mat, stringsAsFactors=F)
condNames <- c("Many Logs")
group.colors <- c("1" = "gray")
## bar plot - blame scaled
title <- c('Blame Judgments')
p1<-ggplot(blame.summary,aes(x=factor(cond),y=mean,fill=factor(cond))) +
scale_fill_manual(values=group.colors) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")+theme_bw()+coord_cartesian(ylim=c(1, 8))
p1+geom_errorbar(aes(ymax=mean+sem, ymin=mean-sem), position="dodge")+ggtitle(title)+
scale_x_discrete(breaks = 1:length(condNames), labels=condNames)+
theme(panel.grid.major = element_blank(),legend.position="none", panel.grid.minor = element_blank(), axis.title.y=element_blank())+
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust=1))+
xlab("Condition")+ylab("Mean") + geom_hline(yintercept = baseline_add_sem) +
geom_hline(yintercept = baseline_minus_sem) + geom_hline(yintercept = baseline_mean, lty=5)
## bar plot - blame mcq
blameTable <- matrix(NA,2)
blameTable[1] <- length(blame_choice[cond==1 & blame_choice==1])/length(blame_choice[cond==1]) #many logs
blameTable[2] <- length(blame_choice[cond==0 & blame_choice==1])/length(blame_choice[cond==0]) #no context
barplot(blameTable[1], beside=TRUE,ylim=c(0,1.0), col=group.colors,
legend.text=TRUE, main="Proportion Blaming Driver of Red Car", cex.axis=1.0, cex.main = 1.5,names = condNames,ylab="Proportion")
abline(a= blameTable[2], b = 0)
##blame table for subset of participants who didn't mention a car hitting th eman
noHit_blameTable <- matrix(NA, 2)
noHit_blameTable[1] <- length(noHit_blame_choice[noHit_cond==1 & noHit_blame_choice==1])/length(noHit_blame_choice[noHit_cond==1]) #many logs
noHit_blameTable[2] <- length(noHit_blame_choice[noHit_cond==0 & noHit_blame_choice==1])/length(noHit_blame_choice[noHit_cond==0]) #no context
# num subjects in each cond
tapply(blame,cond,length)
tapply(blame,cond,mean)
tapply(blame,cond,sd)
# interrupted motion v interrupted no context
t.test(blame[cond == 1 | cond == 0] ~ cond[cond == 1 | cond == 0], var.equal=TRUE, paired=FALSE)
tes(-1.3754, 137, 127) #0.17
# interrupted motion v no context motion
t.test(blame[cond == 1 | cond == 2] ~ cond[cond == 1 | cond == 2], var.equal=TRUE, paired=FALSE)
tes(1.0123, 137, 89) #d=0.14
# num subjects in each cond
tapply(noHit_blame,noHit_cond,length)
tapply(noHit_blame,noHit_cond,mean)
tapply(noHit_blame,noHit_cond,sd)
# interrupted motion v interrupted no context
t.test(noHit_blame[noHit_cond == 1 | noHit_cond == 0] ~ noHit_cond[noHit_cond == 1 | noHit_cond == 0], var.equal=TRUE, paired=FALSE)
tes(-0.90041, 59, 38) #0.19
# interrupted motion v no context motion
t.test(noHit_blame[noHit_cond == 1 | noHit_cond == 2] ~ noHit_cond[noHit_cond == 1 | noHit_cond == 2], var.equal=TRUE, paired=FALSE)
tes(1.0102, 59, 89) #d=0.17
#[see separate script for experiment* condition interaction]
blameTable
blame_noContext_motion <- length(blame_choice[cond==2 & blame_choice==1])/length(blame_choice[cond==2]); blame_noContext_motion #proportion for E3a no context cond
blameChoiceTable <- table(blame_choice,cond); blameChoiceTable
# many logs v no context
length(cond[cond == 1 | cond == 0])
chisq.test(cond[cond == 1 | cond == 0], blame_choice[cond == 1 | cond == 0])
chisq.test(blameChoiceTable[,1:2])
cramersV(blameChoiceTable[,1:2])
# many logs v no context motion
length(cond[cond == 1 | cond == 2])
chisq.test(cond[cond == 1 | cond == 2], blame_choice[cond == 1 | cond == 2])
chisq.test(blameChoiceTable[,c(2,3)])
cramersV(blameChoiceTable[,c(2,3)])
######## replicate analysis with subset of participants who didn't mention a car hitting the man
noHit_blameTable
noHit_blameChoiceTable <- table(noHit_blame_choice,noHit_cond); noHit_blameChoiceTable
# many logs v no context
length(noHit_cond[noHit_cond == 1 | noHit_cond == 0])
chisq.test(noHit_cond[noHit_cond == 1 | noHit_cond == 0], noHit_blame_choice[noHit_cond == 1 | noHit_cond == 0])
chisq.test(noHit_blameChoiceTable[,1:2])
cramersV(noHit_blameChoiceTable[,1:2])
# many logs v no context motion
length(noHit_cond[noHit_cond == 1 | noHit_cond == 2])
chisq.test(noHit_cond[noHit_cond == 1 | noHit_cond == 2], noHit_blame_choice[noHit_cond == 1 | noHit_cond == 2])
chisq.test(noHit_blameChoiceTable[,c(2,3)])
cramersV(noHit_blameChoiceTable[,c(2,3)])
## clear workspace
rm(list = ls())
## necessary libraries
if (!require(psych)) {install.packages("psych"); require(psych)}
if (!require(fmsb)) {install.packages("fmsb"); require(fmsb)}
if (!require(compute.es)) {install.packages("compute.es"); require(compute.es)}
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github_anonymized/moral_capture/e3b_eliminating_motion/data_and_analysis/data")
data <- read.csv('e3b_coded_descriptions.csv')
labels(data)
## clear workspace
rm(list = ls())
## necessary libraries
if (!require(psych)) {install.packages("psych"); require(psych)}
if (!require(fmsb)) {install.packages("fmsb"); require(fmsb)}
if (!require(compute.es)) {install.packages("compute.es"); require(compute.es)}
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github_anonymized/moral_capture/e3b_eliminating_motion/description_coding")
data <- read.csv('e3b_coded_descriptions.csv')
labels(data)
manUncertainty_codes <- data$julian_manUncertainty_codes
carHitMan_codes <- data$julian_carHitMan_codes
#proportion of people who were uncertain what happened to the man at the end
(sum(manUncertainty_codes)/length(manUncertainty_codes))*100
#proportion of people who clearly indicated that they saw a car hit the man
(sum(carHitMan_codes)/length(manUncertainty_codes))*100
## clear workspace
rm(list = ls())
## necessary libraries
if (!require(rjson)) {install.packages("rjson"); require(rjson)}
if (!require(ggplot2)) {install.packages("ggplot2"); require(ggplot2)}
if (!require(ltm)) {install.packages("ltm"); require(ltm)}
if (!require(heplots)) {install.packages("heplots"); require(heplots)}
if (!require(lmtest)) {install.packages("lmtest"); require(lmtest)}
if (!require(compute.es)) {install.packages("compute.es"); require(compute.es)}
if (!require(lsr)) {install.packages("lsr"); require(lsr)}
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github_anonymized/moral_capture/e3a_grouping/data_and_analysis/data")
files <- list.files(pattern=('*txt'))
myJSON <- lapply(files, function(x) fromJSON(file=x)) #join into one single JSON file
(data_motion <- lapply(myJSON, function(myJSON) { as.data.frame(myJSON) }))
data_motion <- (data_motion <- do.call(rbind, data_motion))
data_motion <- data_motion[data_motion$trialStruct.cond==0 | data_motion$trialStruct.cond==1,]
data_motion$trialStruct.cond <- data_motion$trialStruct.cond + 1
data_motion$experiment <- 1
#exclusions
data_motion <- subset(data_motion,(data_motion$trialStruct.comprehension == "E"))
data_motion <- subset(data_motion,(data_motion$trialStruct.displayTime < 4225 & data_motion$trialStruct.displayTime > 4175))
data_motion <- subset(data_motion, (data_motion$trialStruct.whichCar_choice == 2))
dim(data_motion) #202 (same as in E3a, obviously)
#add extra column, so that we can later rbind these data with that for e3b
data_motion$carHitMan <- 0
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github_anonymized/moral_capture/e3b_eliminating_motion/data_and_analysis/data")
files <- list.files(pattern=('*txt'))
myJSON <- lapply(files, function(x) fromJSON(file=x)) #join into one single JSON file
(data_static <- lapply(myJSON, function(myJSON) { as.data.frame(myJSON) }))
data_static <- (data_static <- do.call(rbind, data_static))
data_static$trialStruct.cond <- data_static$trialStruct.cond + 1
data_static$experiment <- 2
# data after comprehension exclusion
data_static <- subset(data_static,(data_static$trialStruct.comprehension == "E"))
dim(data_static) #280
#demographics
sex <- as.factor(data_static$trialStruct.sex)
table(sex)[2]/sum(table(sex))
age <- as.numeric(levels(data_static$trialStruct.age))[data_static$trialStruct.age]
mean(age,na.rm=TRUE)
# data after which car exclusion
data_static <- subset(data_static,(data_static$trialStruct.whichCar_choice == 2))
dim(data_static) #264
# proportion excluded by which car measure
100 - (((280-264)/280)*100)
#add 'car hit man' codes from separate description coding
dir <- setwd("/Users/julian/Dropbox (alvarezlab)/Research-DeFreitas/Projects/moralCapture/moralCapture_data_github/moral_capture/e3b_eliminating_motion/description_coding")
descriptions <- read.csv('e3b_coded_descriptions.csv')
data_static$carHitMan <- descriptions$julian_carHitMan_codes
data <- rbind(data_motion,data_static); dim(data)
## assign variable names
cond <- as.factor(data$trialStruct.cond)
exp <- as.factor(data$experiment)
table(cond)
blame <- as.numeric(levels(data$trialStruct.blame_scaled))[data$trialStruct.blame_scaled]
blame_choice <- as.factor(data$trialStruct.blame_choice)
#subset of participants who didn't mention a car hitting a man
noHitData <- subset(data, data$carHitMan == 0)
noHit_exp <- as.factor(noHitData$experiment)
noHit_cond <- as.factor(noHitData$trialStruct.cond)
noHit_blame <- as.numeric(levels(noHitData$trialStruct.blame_scaled))[noHitData$trialStruct.blame_scaled]
noHit_blame_choice <- as.factor(noHitData$trialStruct.blame_choice)
alpha = .05
numExps = 2
numConds = 2
blame_mat <- matrix(NA,4,7)
colnames(blame_mat) <- c('counter','exp','cond','mean','sd','n','sem')
counter = 1
for (j in 1:numExps) {
for (i in 1:numConds) {
blame_mat[counter,] <- c(counter, j, i, mean(blame[cond == i & exp == j]),sd(blame[cond==i & exp == j]), length(blame[cond == i & exp == j]),0)
blame_mat[counter,7] <- blame_mat[counter,5]/sqrt(blame_mat[counter,6])
counter = counter + 1
}
}
blame.summary <- as.data.frame(blame_mat, stringsAsFactors=F)
condNames <- c("Motion","Static")
title <- c('Blame Judgments')
p1<-ggplot(blame.summary,aes(x=factor(exp),y=mean,fill=factor(cond)))+
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")+theme_bw()+coord_cartesian(ylim=c(1, 8))
p1+geom_errorbar(aes(ymax=mean+sem, ymin=mean-sem), position="dodge")+ggtitle(title)+
scale_x_discrete(breaks = 1:length(condNames), labels=condNames)+
theme(panel.grid.major = element_blank(),legend.position="none", panel.grid.minor = element_blank(), axis.title.y=element_blank())+
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust=1))+
xlab("Condition")+ylab("Mean")
#blame scaled
scaled_mod <- aov(blame ~ cond*exp)
summary(scaled_mod)
etaSquared(scaled_mod)
#replicate analysis with subset of participants who didn't mention a car hitting the man
noHit_scaled_mod <- aov(noHit_blame ~ noHit_cond*noHit_exp)
summary(noHit_scaled_mod)
etaSquared(noHit_scaled_mod)
blameTable <- matrix(NA,4)
condNames <- c('no context-m','grouping-m','no context-s', 'grouping-s')
blameTable[1] <- length(blame_choice[exp==1 & cond==1 & blame_choice==1])/length(blame_choice[exp==1 & cond==1])
blameTable[2] <- length(blame_choice[exp==1 & cond==2 & blame_choice==1])/length(blame_choice[exp==1 & cond==2])
blameTable[3] <- length(blame_choice[exp==2 & cond==1 & blame_choice==1])/length(blame_choice[exp==2 & cond==1])
blameTable[4] <- length(blame_choice[exp==2 & cond==2 & blame_choice==1])/length(blame_choice[exp==2 & cond==2])
barplot(blameTable, beside=TRUE,ylim=c(0,1.0),
legend.text=TRUE, main="Proportion Blaming Driver of Red Car", cex.axis=1.0, cex.main = 1.5,names = condNames,ylab="Proportion")
blame_mod <- glm(blame_choice ~ cond*exp, family = binomial)
summary(blame_mod)
#replicate analysis with subset of participants who didn't mention a car hitting the man
noHit_blame_mod <- glm(noHit_blame_choice ~ noHit_cond*noHit_exp, family = binomial)
summary(noHit_blame_mod)
blame_mod <- glm(blame_choice ~ cond*exp, family = binomial)
summary(blame_mod)
#replicate analysis with subset of participants who didn't mention a car hitting the man
noHit_blame_mod <- glm(noHit_blame_choice ~ noHit_cond*noHit_exp, family = binomial)
summary(noHit_blame_mod)
